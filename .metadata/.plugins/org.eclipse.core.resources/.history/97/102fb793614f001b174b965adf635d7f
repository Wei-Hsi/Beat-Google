
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map.Entry;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class TestProject
 */
@WebServlet("/TestProject")
public class TestProject extends HttpServlet {

	private static final long serialVersionUID = 1L;
//	public KeywordList lst = new KeywordList();
//	public ArrayList<WebNode> nodeList = new ArrayList<WebNode>();
//	public Ranking rankResult;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public TestProject() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.setCharacterEncoding("UTF-8");
		request.setCharacterEncoding("UTF-8");
		response.setContentType("text/html");
		if (request.getParameter("keyword") == null) {
			String requestUri = request.getRequestURI();
			request.setAttribute("requestUri", requestUri);
			request.getRequestDispatcher("Search.jsp").forward(request, response);
			return;
		}
//		KeywordList lst = new KeywordList();
//		lst.addKeyword();
		ArrayList<Keyword> lst = new ArrayList<Keyword>();
		lst.add(new Keyword("影城", 50));
		lst.add(new Keyword("上映日期", 3));
		lst.add(new Keyword("訂票", 30));
		lst.add(new Keyword("主演", 1));
		lst.add(new Keyword("數位", 30));
		lst.add(new Keyword("2D", 5));
		lst.add(new Keyword("3D", 5));
		lst.add(new Keyword("現正熱映", 3));
//		ArrayList<WebNode> nodeList = new ArrayList<WebNode>();

		GoogleQuery google = new GoogleQuery(request.getParameter("keyword"));
		HashMap<String, String> query = google.query();

		String[][] s = new String[query.size()][3];
		request.setAttribute("query", s);
		int num = 0;
		for (Entry<String, String> entry : query.entrySet()) {
			String title = entry.getKey();
			String url = entry.getValue();
			s[num][0] = title;
			s[num][1] = url;

			WebPage rootPage = new WebPage(url, title);
			WebTree tree = new WebTree(rootPage);

			try {
				rootPage.toFetch();
				tree.root.toSubPage();
			} catch (Exception e) {
				System.err.println(e.getMessage());
				s[num][2] = String.valueOf(0.0);
//				continue;
			}
			tree.setPostOrderScore(lst);
			s[num][2] = String.valueOf(tree.root.nodeScore);

//			s[num][2] = String.valueOf(Math.random() * 100);

//		    nodeList.add(tree.root);
//		    nodeList = new Ranking(nodeList).nodeList;
			/*
			 * 
			 * 
			 * WordCounter counter = new WordCounter(url); // counter.findWebChild();
			 * 
			 * for(Entry<String, String> child : counter.findWebChild().entrySet()) { String
			 * childTitle = child.getKey(); String childUrl = child.getValue();
			 * tree.root.addChild(new WebNode(new WebPage(childUrl,childTitle))); }
			 * tree.setPostOrderScore(lst.getKeyword()); nodeList.add(tree.root);
			 * 
			 */

//			for(int i=0; i<counter.findWebChild().size(); i++) {
//				tree.root.addChild(new WebNode(new WebPage(counter.urlList.get(i), counter.nameList.get(i))));
//			}

			// use word counter
//		    WordCounter counter = new WordCounter(url);
//		    s[num][2] = counter.countKeyword(url);
			num++;
		}
		new Ranking(s);
		for (int i = 0; i < s.length; i++) {
			System.out.println(s[i][0] + "," + s[i][1] + "," + s[i][2]);
		}

		request.getRequestDispatcher("googleitem.jsp").forward(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
